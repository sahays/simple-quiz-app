enum QuestionType {
  radio
  checkbox
}

type ChoiceType {
  id: String!
  text: String!
}

type QuestionScalarType {
  id: ID!
  question: String!
  type: QuestionType!
  choices: [ChoiceType]!
  answers: [String]!
  tags: [String]
  explanation: String
}

type Question
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["admins"], operations: [create, read] }
      { allow: owner, operations: [create, read, delete] }
    ]
  ) {
  id: ID!
  question: String!
  type: QuestionType!
  choices: [ChoiceType]!
  answers: [String]!
  tags: [String]
  explanation: String
}

type Quiz
  @model
  @key(name: "byCode", fields: ["code"], queryField: "getQuizByCode")
  @auth(
    rules: [
      { allow: groups, groups: ["users"], operations: [read] }
      { allow: groups, groups: ["admins"], operations: [create, read] }
      { allow: owner, operations: [create, read, delete] }
    ]
  ) {
  id: ID!
  code: String!
  name: String!
  tags: [String]
  questions: [QuestionScalarType]!
  description: String
  instructions: String
  timeLimit: Int
}

type ResponseType {
  questionId: String!
  responses: [String]!
}

type UserAttrs {
  firstName: String!
  lastName: String!
}

type Response
  @model
  @aws_iam
  @aws_cognito_user_pools
  @key(
    name: "byQuiz"
    fields: ["quizId", "username"]
    queryField: "listUserResponsesByQuiz"
  )
  @auth(
    rules: [
      { allow: groups, groups: ["admins"], operations: [create, read] }
      { allow: owner, operations: [create, read] }
    ]
  ) {
  id: ID!
  username: String!
  userAttrs: UserAttrs!
  quizId: String!
  responses: [ResponseType]!
}

type ProcessQuizResponseOutput {
  message: String
}

type Query {
  processQuizResponses(quizId: String!): ProcessQuizResponseOutput
    @function(name: "processQuizResponses-${env}")
}
